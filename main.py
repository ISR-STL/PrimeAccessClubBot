import threading
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# ‚úÖ TOKEN DO NOVO BOT
BOT_TOKEN = "8391268031:AAFbXEi13Zuo6KeExxi21Z2f3fRt9eb5lso"

# ‚úÖ MENSAGENS SIMPLIFICADAS
message_pt = "‚úÖ Pr√©-venda SBN ativa! Pre√ßo atual: US$ 0,01. Pr√≥ximo pre√ßo: US$ 0,02.\nWhitelist: https://forms.gle/5sJNUBMTusfRfxqSA"
message_en = "‚úÖ SBN Pre-sale active! Current price: US$ 0.01. Next price: US$ 0.02.\nWhitelist: https://forms.gle/5sJNUBMTusfRfxqSA"
status_msg = "üìä Status: 48h restantes. Liquidez travada 12 meses. Apenas 500 vagas whitelist."

# ‚úÖ HANDLER DO /START
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚úÖ Como comprar (PT)", callback_data='pt')],
        [InlineKeyboardButton("üåç How to buy (EN)", callback_data='en')],
        [InlineKeyboardButton("üìà Status", callback_data='status')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("‚úÖ Bot ativo! Escolha uma op√ß√£o:", reply_markup=reply_markup)

# ‚úÖ BOT√ïES INLINE
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == 'pt':
        await query.edit_message_text(text=message_pt)
    elif query.data == 'en':
        await query.edit_message_text(text=message_en)
    elif query.data == 'status':
        await query.edit_message_text(text=status_msg)

# ‚úÖ FUN√á√ÉO QUE RODA O BOT EM THREAD SEPARADA
def run_bot():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_callback))
    print("ü§ñ BOT INICIADO E RODANDO EM POLLING...")
    app.run_polling()

# ‚úÖ FLASK PARA HEALTHCHECK
flask_app = Flask(__name__)

@flask_app.route("/")
def home():
    return "‚úÖ Bot est√° rodando no Railway!"

# ‚úÖ INICIALIZADOR
if __name__ == "__main__":
    # Rodar bot em thread paralela
    bot_thread = threading.Thread(target=run_bot)
    bot_thread.start()
    
    # Rodar flask para manter Railway ativo
    flask_app.run(host="0.0.0.0", port=8080)
